{"version":3,"sources":["webpack:///./examples/plugin.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAEA;;AACA;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;AAEA,UAAS,aAAT,CAAuB,KAAvB,EAA8B,YAA9B,EAA4C,QAA5C,EAAsD;;AAEpD,OAAM,OAAO,aAAa,OAAb,EAAb;AACA,OAAI,iBAAJ;AACA,OAAI,cAAJ,C;;AAEA,UAAO,CAAC,WAAW,MAAM,IAAN,CAAW,IAAX,CAAZ,MAAkC,IAAzC,EAA+C;;AAC7C,aAAQ,SAAS,KAAjB;AACA,cAAS,KAAT,EAAgB,QAAQ,SAAS,CAAT,EAAY,MAApC;AACD;AACF;;AAED,KAAM,kBAAkB,IAAI,MAAJ,mBAA6B,GAA7B,CAAxB;;AAEA,KAAM,OAAO;AACX,SAAM,MADK;AAEX,cAAW;AACT,qBAAgB,0BAAM,CAAE,CADf;AAET,qBAAgB,0BAAM,CAAE;AAFf,IAFA;AAMX,cAAW;AAAA;AAAA;AAAA;AAAA,IANA;AAOX,eAAY,CAAC;AACX,eAAU,kBAAC,YAAD,EAAe,QAAf,EAA4B;AACpC,qBAAc,eAAd,EAA+B,YAA/B,EAA6C,QAA7C;AACD,MAHU;AAIX,gBAAW,mBAAC,KAAD;AAAA,cAAW;AAAA;AAAA,WAAM,OAAO,EAAC,OAAO,KAAR,EAAb;AAA8B,eAAM;AAApC,QAAX;AAAA;AAJA,IAAD;AAPD,EAAb;;AAeA,KAAM,UAAU,CAAC,IAAD,CAAhB;AACA,KAAM,WAAW,CAAC,CAAC,MAAD,CAAD,CAAjB;;AAEA,UAAS,OAAT,CAAiB,EAAjB,EAAqB;AACnB,WAAQ,GAAR,CAAY,YAAZ,EAA0B,GAAG,OAA7B,EAAsC,GAAG,OAAzC;AACA,OAAI,GAAG,OAAH,KAAe,EAAnB,EAAuB;AACrB,SAAI,GAAG,OAAP,EAAgB;AACd,cAAO,aAAP;AACD;AACD,YAAO,IAAP;AACD;AACD,UAAO,KAAP;AACD;;AAED,KAAM,gBAAgB,gBAAM,WAAN,CAAkB;AAAA;AACtC,kBADsC,6BACpB;AAChB,YAAO;AACL,gBAAS,EADJ;AAEL,oBAAa;AAFR,MAAP;AAID,IANqC;AAOtC,WAPsC,oBAO7B,WAP6B,EAOhB;AACpB,UAAK,QAAL,CAAc;AACZ;AADY,MAAd;AAGD,IAXqC;AAYtC,SAZsC,oBAY7B;AACP,YAAO;AACL,gBAAS,OADJ;AAEL,iBAAU,QAFL;AAGL,oBAAY,iBAHP;AAIL,kBAAW,mBAAC,EAAD;AAAA,gBAAQ,QAAQ,EAAR,CAAR;AAAA,QAJN;AAKL,iBAAU,KAAK,QALV;AAML,cAAO,KAAK,KAAL,CAAW;AANb,OAAP;AASD;AAtBqC,EAAlB,CAAtB;;AAyBA,oBAAS,MAAT,CAAgB,8BAAC,aAAD,OAAhB,EAAmC,SAAS,cAAT,CAAwB,iBAAxB,CAAnC,E","file":"plugin.js","sourcesContent":["// use jsx to render html, do not modify simple.html\n\nimport 'rc-editor-core/assets/index.less';\nimport { EditorCore, Toolbar, GetText } from 'rc-editor-core';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Entity } from 'draft-js';\nimport 'rc-editor-plugin-emoji/assets/index.css';\n\nfunction findWithRegex(regex, contentBlock, callback) {\n  // Get the text from the contentBlock\n  const text = contentBlock.getText();\n  let matchArr;\n  let start; // eslint-disable-line\n  // Go through all matches in the text and return the indizes to the callback\n  while ((matchArr = regex.exec(text)) !== null) { // eslint-disable-line\n    start = matchArr.index;\n    callback(start, start + matchArr[0].length);\n  }\n}\n\nconst suggestionRegex = new RegExp(`(\\\\s|^)@[\\\\w]*`, 'g');\n\nconst Test = {\n  name: 'test',\n  callbacks: {\n    getEditorState: () => {},\n    setEditorState: () => {},\n  },\n  component: <div>123</div>,\n  decorators: [{\n    strategy: (contentBlock, callback) => {\n      findWithRegex(suggestionRegex, contentBlock, callback);\n    },\n    component: (props) => <span style={{color: 'red'}}>{props.children}</span>\n  }],\n};\n\nconst plugins = [Test];\nconst toolbars = [['test']];\n\nfunction keyDown(ev) {\n  console.log('>> keydown', ev.keyCode, ev.ctrlKey);\n  if (ev.keyCode === 13) {\n    if (ev.ctrlKey) {\n      return 'split-block';\n    }\n    return true\n  }\n  return false;\n}\n\nconst EditorWrapper = React.createClass({\n  getInitialState() {\n    return {\n      plugins: [],\n      editorState: null,\n    };\n  },\n  onChange(editorState) {\n    this.setState({\n      editorState,\n    });\n  },\n  render() {\n    return <EditorCore\n      plugins={plugins}\n      toolbars={toolbars}\n      placeholder=\"input text here\"\n      onKeyDown={(ev) => keyDown(ev)}\n      onChange={this.onChange}\n      value={this.state.editorState}\n    >\n    </EditorCore>;\n  }\n});\n\nReactDOM.render(<EditorWrapper />, document.getElementById('__react-content'));\n\n\n\n/** WEBPACK FOOTER **\n ** ./examples/plugin.js\n **/"],"sourceRoot":""}